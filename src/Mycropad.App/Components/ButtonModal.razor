<div class="flex flex-col h-full">
    <form class="h-80">
        <label
            for="combination"
            class="text-sm font-medium text-gray-900 block mb-2">
            Combination
        </label>
        <input 
            type="text" 
            id="combination" 
            class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" 
            placeholder="Press the combination you want"
            @bind-value="@_inputValue"
            @onkeydown="@KeyPress"
            @onkeydown:preventDefault
            required>
    </form>
    <div class="p-2">
        <button 
            @onclick="Save"
            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full">
            Save
        </button>
        <button 
            @onclick="Cancel"
            class="bg-transparent hover:bg-blue-700 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded-full">
            Cancel
        </button>
    </div>
</div>

@code {
    [Parameter] public string Key { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    async Task Save()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok(_inputValue));
    }

    async Task Cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Cancel());
    }

    private string _inputValue = "";

    private void KeyPress(KeyboardEventArgs e)
    {
        var newValue = "";
        Console.WriteLine($"{e} {e.Code} {e.AltKey} {e.CtrlKey} {e.MetaKey} {e.ShiftKey}");

        if(e.CtrlKey)
        {
            newValue = "CTRL + ";
        }

        if(e.AltKey)
        {
            newValue += "ALT + ";
        }

        if(e.ShiftKey)
        {
            newValue += "SHIFT + ";
        }

        if(e.MetaKey)
        {
            newValue += "META + ";
        }

        newValue += e.Key;

        _inputValue = newValue;
        StateHasChanged();
    }
}